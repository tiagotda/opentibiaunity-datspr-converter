// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: appearances.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenTibiaUnity.Proto.Appearances
{

    /// <summary>Holder for reflection information generated from appearances.proto</summary>
    public static partial class AppearancesReflection
    {

        #region Descriptor
        /// <summary>File descriptor for appearances.proto</summary>
        public static pbr::FileDescriptor Descriptor {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static AppearancesReflection() {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChFhcHBlYXJhbmNlcy5wcm90bxIgT3BlblRpYmlhVW5pdHkuUHJvdG8uQXBw",
                  "ZWFyYW5jZXMiiQIKC0FwcGVhcmFuY2VzEj0KB29iamVjdHMYASADKAsyLC5P",
                  "cGVuVGliaWFVbml0eS5Qcm90by5BcHBlYXJhbmNlcy5BcHBlYXJhbmNlEj0K",
                  "B291dGZpdHMYAiADKAsyLC5PcGVuVGliaWFVbml0eS5Qcm90by5BcHBlYXJh",
                  "bmNlcy5BcHBlYXJhbmNlEj0KB2VmZmVjdHMYAyADKAsyLC5PcGVuVGliaWFV",
                  "bml0eS5Qcm90by5BcHBlYXJhbmNlcy5BcHBlYXJhbmNlEj0KB21pc3NsZXMY",
                  "BCADKAsyLC5PcGVuVGliaWFVbml0eS5Qcm90by5BcHBlYXJhbmNlcy5BcHBl",
                  "YXJhbmNlIp0BCgpBcHBlYXJhbmNlEgoKAmlkGAEgASgNEkAKBWZsYWdzGAIg",
                  "ASgLMjEuT3BlblRpYmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuQXBwZWFy",
                  "YW5jZUZsYWdzEkEKC2ZyYW1lR3JvdXBzGAMgAygLMiwuT3BlblRpYmlhVW5p",
                  "dHkuUHJvdG8uQXBwZWFyYW5jZXMuRnJhbWVHcm91cCKlCgoPQXBwZWFyYW5j",
                  "ZUZsYWdzEjgKBmdyb3VuZBgBIAEoCzIoLk9wZW5UaWJpYVVuaXR5LlByb3Rv",
                  "LkFwcGVhcmFuY2VzLkdyb3VuZBIUCgxncm91bmRCb3JkZXIYAiABKAgSDgoG",
                  "Ym90dG9tGAMgASgIEgsKA3RvcBgEIAEoCBIRCgljb250YWluZXIYBSABKAgS",
                  "EQoJc3RhY2thYmxlGAYgASgIEhAKCGZvcmNlVXNlGAcgASgIEhAKCG11bHRp",
                  "VXNlGAggASgIEjwKCHdyaXRhYmxlGAkgASgLMiouT3BlblRpYmlhVW5pdHku",
                  "UHJvdG8uQXBwZWFyYW5jZXMuV3JpdGFibGUSQAoMd3JpdGFibGVPbmNlGAog",
                  "ASgLMiouT3BlblRpYmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuV3JpdGFi",
                  "bGUSFgoOZmx1aWRDb250YWluZXIYCyABKAgSDgoGc3BsYXNoGAwgASgIEhIK",
                  "CnVucGFzc2FibGUYDSABKAgSEgoKdW5tb3ZlYWJsZRgOIAEoCBIPCgd1bnNp",
                  "Z2h0GA8gASgIEhEKCWJsb2NrUGF0aBgQIAEoCBISCgpwaWNrdXBhYmxlGBEg",
                  "ASgIEhAKCGhhbmdhYmxlGBIgASgIEjQKBGhvb2sYEyABKAsyJi5PcGVuVGli",
                  "aWFVbml0eS5Qcm90by5BcHBlYXJhbmNlcy5Ib29rEhIKCnJvdGF0ZWFibGUY",
                  "FCABKAgSOgoFbGlnaHQYFSABKAsyKy5PcGVuVGliaWFVbml0eS5Qcm90by5B",
                  "cHBlYXJhbmNlcy5MaWdodEluZm8SEAoIZG9udEhpZGUYFiABKAgSEwoLdHJh",
                  "bnNsdWNlbnQYFyABKAgSRAoMZGlzcGxhY2VtZW50GBggASgLMi4uT3BlblRp",
                  "YmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuRGlzcGxhY2VtZW50Ej4KCWVs",
                  "ZXZhdGlvbhgZIAEoCzIrLk9wZW5UaWJpYVVuaXR5LlByb3RvLkFwcGVhcmFu",
                  "Y2VzLkVsZXZhdGlvbhITCgtseWluZ0NvcnBzZRgaIAEoCBIVCg1hbmltYXRl",
                  "QWx3YXlzGBsgASgIEjoKB21pbmltYXAYHCABKAsyKS5PcGVuVGliaWFVbml0",
                  "eS5Qcm90by5BcHBlYXJhbmNlcy5NaW5pTWFwEjwKCGxlbnNIZWxwGB0gASgL",
                  "MiouT3BlblRpYmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuTGVuc0hlbHAS",
                  "EgoKZnVsbEdyb3VuZBgeIAEoCBIMCgRMb29rGB8gASgIEjgKBWNsb3RoGCAg",
                  "ASgLMikuT3BlblRpYmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuQ2xvdGhl",
                  "cxI8CgZtYXJrZXQYISABKAsyLC5PcGVuVGliaWFVbml0eS5Qcm90by5BcHBl",
                  "YXJhbmNlcy5NYXJrZXRJbmZvEkYKDWRlZmF1bHRBY3Rpb24YIiABKAsyLy5P",
                  "cGVuVGliaWFVbml0eS5Qcm90by5BcHBlYXJhbmNlcy5EZWZhdWx0QWN0aW9u",
                  "EgsKA3VzZRgjIAEoCBIQCgh3cmFwYWJsZRgkIAEoCBISCgp1bldyYXBhYmxl",
                  "GCUgASgIEhEKCXRvcEVmZmVjdBgmIAEoCBIUCgtmbG9vckNoYW5nZRj8ASAB",
                  "KAgSGAoPbm9Nb3ZlQW5pbWF0aW9uGP0BIAEoCBIQCgdjaGFyZ2VzGP4BIAEo",
                  "CCIXCgZHcm91bmQSDQoFc3BlZWQYASABKA0iGgoIV3JpdGFibGUSDgoGbGVu",
                  "Z3RoGAEgASgNIkAKBEhvb2sSOAoEdHlwZRgBIAEoDjIqLk9wZW5UaWJpYVVu",
                  "aXR5LlByb3RvLkFwcGVhcmFuY2VzLkhvb2tUeXBlIi0KCUxpZ2h0SW5mbxIR",
                  "CglpbnRlbnNpdHkYASABKA0SDQoFY29sb3IYAiABKA0iGAoHTWluaU1hcBIN",
                  "CgVjb2xvchgBIAEoDSIkCgxEaXNwbGFjZW1lbnQSCQoBeBgBIAEoDRIJCgF5",
                  "GAIgASgNIh4KCUVsZXZhdGlvbhIRCgllbGV2YXRpb24YASABKA0iFgoITGVu",
                  "c0hlbHASCgoCaWQYASABKA0iFwoHQ2xvdGhlcxIMCgRzbG90GAEgASgNIn4K",
                  "Ck1hcmtldEluZm8SEAoIY2F0ZWdvcnkYASABKA0SDwoHdHJhZGVBcxgCIAEo",
                  "DRIOCgZzaG93QXMYAyABKA0SDAoEbmFtZRgEIAEoCRIYChByZXN0cmljdFZv",
                  "Y2F0aW9uGAUgASgNEhUKDXJlcXVpcmVkTGV2ZWwYBiABKA0iTwoNRGVmYXVs",
                  "dEFjdGlvbhI+CgZhY3Rpb24YASABKA4yLi5PcGVuVGliaWFVbml0eS5Qcm90",
                  "by5BcHBlYXJhbmNlcy5QbGF5ZXJBY3Rpb24ivAIKCkZyYW1lR3JvdXASPgoE",
                  "dHlwZRgBIAEoDjIwLk9wZW5UaWJpYVVuaXR5LlByb3RvLkFwcGVhcmFuY2Vz",
                  "LkZyYW1lR3JvdXBUeXBlEg0KBXdpZHRoGAIgASgNEg4KBmhlaWdodBgDIAEo",
                  "DRIRCglleGFjdFNpemUYBCABKA0SDgoGbGF5ZXJzGAUgASgNEhQKDHBhdHRl",
                  "cm5XaWR0aBgGIAEoDRIVCg1wYXR0ZXJuSGVpZ2h0GAcgASgNEhQKDHBhdHRl",
                  "cm5EZXB0aBgIIAEoDRIOCgZwaGFzZXMYCSABKA0SSAoOZnJhbWVBbmltYXRp",
                  "b24YCiABKAsyMC5PcGVuVGliaWFVbml0eS5Qcm90by5BcHBlYXJhbmNlcy5G",
                  "cmFtZUFuaW1hdGlvbhIPCgdzcHJpdGVzGAsgAygNIpkBCg5GcmFtZUFuaW1h",
                  "dGlvbhINCgVhc3luYxgBIAEoCBIRCglsb29wQ291bnQYAiABKAUSEgoKc3Rh",
                  "cnRQaGFzZRgDIAEoBRJRChNmcmFtZUdyb3VwRHVyYXRpb25zGAQgAygLMjQu",
                  "T3BlblRpYmlhVW5pdHkuUHJvdG8uQXBwZWFyYW5jZXMuRnJhbWVHcm91cER1",
                  "cmF0aW9uIi4KEkZyYW1lR3JvdXBEdXJhdGlvbhILCgNtaW4YASABKA0SCwoD",
                  "bWF4GAIgASgNKh8KCEhvb2tUeXBlEgkKBVNvdXRoEAASCAoERWFzdBABKkwK",
                  "DFBsYXllckFjdGlvbhIICgROb25lEAASCAoETG9vaxABEgcKA1VzZRACEggK",
                  "BE9wZW4QAxIVChFBdXRvd2Fsa0hpZ2hsaWdodBAEKkUKDkZyYW1lR3JvdXBU",
                  "eXBlEhcKE0ZyYW1lR3JvdXBUeXBlX0lkbGUQABIaChZGcmFtZUdyb3VwVHlw",
                  "ZV9XYWxraW5nEAFiBnByb3RvMw=="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::OpenTibiaUnity.Proto.Appearances.HookType), typeof(global::OpenTibiaUnity.Proto.Appearances.PlayerAction), typeof(global::OpenTibiaUnity.Proto.Appearances.FrameGroupType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Appearances), global::OpenTibiaUnity.Proto.Appearances.Appearances.Parser, new[]{ "Objects", "Outfits", "Effects", "Missles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Appearance), global::OpenTibiaUnity.Proto.Appearances.Appearance.Parser, new[]{ "Id", "Flags", "FrameGroups" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags), global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags.Parser, new[]{ "Ground", "GroundBorder", "Bottom", "Top", "Container", "Stackable", "ForceUse", "MultiUse", "Writable", "WritableOnce", "FluidContainer", "Splash", "Unpassable", "Unmoveable", "Unsight", "BlockPath", "Pickupable", "Hangable", "Hook", "Rotateable", "Light", "DontHide", "Translucent", "Displacement", "Elevation", "LyingCorpse", "AnimateAlways", "Minimap", "LensHelp", "FullGround", "Look", "Cloth", "Market", "DefaultAction", "Use", "Wrapable", "UnWrapable", "TopEffect", "FloorChange", "NoMoveAnimation", "Charges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Ground), global::OpenTibiaUnity.Proto.Appearances.Ground.Parser, new[]{ "Speed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Writable), global::OpenTibiaUnity.Proto.Appearances.Writable.Parser, new[]{ "Length" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Hook), global::OpenTibiaUnity.Proto.Appearances.Hook.Parser, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.LightInfo), global::OpenTibiaUnity.Proto.Appearances.LightInfo.Parser, new[]{ "Intensity", "Color" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.MiniMap), global::OpenTibiaUnity.Proto.Appearances.MiniMap.Parser, new[]{ "Color" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Displacement), global::OpenTibiaUnity.Proto.Appearances.Displacement.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Elevation), global::OpenTibiaUnity.Proto.Appearances.Elevation.Parser, new[]{ "Elevation_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.LensHelp), global::OpenTibiaUnity.Proto.Appearances.LensHelp.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.Clothes), global::OpenTibiaUnity.Proto.Appearances.Clothes.Parser, new[]{ "Slot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.MarketInfo), global::OpenTibiaUnity.Proto.Appearances.MarketInfo.Parser, new[]{ "Category", "TradeAs", "ShowAs", "Name", "RestrictVocation", "RequiredLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.DefaultAction), global::OpenTibiaUnity.Proto.Appearances.DefaultAction.Parser, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.FrameGroup), global::OpenTibiaUnity.Proto.Appearances.FrameGroup.Parser, new[]{ "Type", "Width", "Height", "ExactSize", "Layers", "PatternWidth", "PatternHeight", "PatternDepth", "Phases", "FrameAnimation", "Sprites" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.FrameAnimation), global::OpenTibiaUnity.Proto.Appearances.FrameAnimation.Parser, new[]{ "Async", "LoopCount", "StartPhase", "FrameGroupDurations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration), global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration.Parser, new[]{ "Min", "Max" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    public enum HookType
    {
        [pbr::OriginalName("South")] South = 0,
        [pbr::OriginalName("East")] East = 1,
    }

    public enum PlayerAction
    {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("Look")] Look = 1,
        [pbr::OriginalName("Use")] Use = 2,
        [pbr::OriginalName("Open")] Open = 3,
        [pbr::OriginalName("AutowalkHighlight")] AutowalkHighlight = 4,
    }

    public enum FrameGroupType
    {
        [pbr::OriginalName("FrameGroupType_Idle")] Idle = 0,
        [pbr::OriginalName("FrameGroupType_Walking")] Walking = 1,
    }

    #endregion

    #region Messages
    public sealed partial class Appearances : pb::IMessage<Appearances>
    {
        private static readonly pb::MessageParser<Appearances> _parser = new pb::MessageParser<Appearances>(() => new Appearances());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Appearances> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearances() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearances(Appearances other) : this() {
            objects_ = other.objects_.Clone();
            outfits_ = other.outfits_.Clone();
            effects_ = other.effects_.Clone();
            missles_ = other.missles_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearances Clone() {
            return new Appearances(this);
        }

        /// <summary>Field number for the "objects" field.</summary>
        public const int ObjectsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.Appearance> _repeated_objects_codec
            = pb::FieldCodec.ForMessage(10, global::OpenTibiaUnity.Proto.Appearances.Appearance.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> objects_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> Objects {
            get { return objects_; }
        }

        /// <summary>Field number for the "outfits" field.</summary>
        public const int OutfitsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.Appearance> _repeated_outfits_codec
            = pb::FieldCodec.ForMessage(18, global::OpenTibiaUnity.Proto.Appearances.Appearance.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> outfits_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> Outfits {
            get { return outfits_; }
        }

        /// <summary>Field number for the "effects" field.</summary>
        public const int EffectsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.Appearance> _repeated_effects_codec
            = pb::FieldCodec.ForMessage(26, global::OpenTibiaUnity.Proto.Appearances.Appearance.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> effects_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> Effects {
            get { return effects_; }
        }

        /// <summary>Field number for the "missles" field.</summary>
        public const int MisslesFieldNumber = 4;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.Appearance> _repeated_missles_codec
            = pb::FieldCodec.ForMessage(34, global::OpenTibiaUnity.Proto.Appearances.Appearance.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> missles_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.Appearance> Missles {
            get { return missles_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Appearances);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Appearances other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (!objects_.Equals(other.objects_)) return false;
            if (!outfits_.Equals(other.outfits_)) return false;
            if (!effects_.Equals(other.effects_)) return false;
            if (!missles_.Equals(other.missles_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            hash ^= objects_.GetHashCode();
            hash ^= outfits_.GetHashCode();
            hash ^= effects_.GetHashCode();
            hash ^= missles_.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            objects_.WriteTo(output, _repeated_objects_codec);
            outfits_.WriteTo(output, _repeated_outfits_codec);
            effects_.WriteTo(output, _repeated_effects_codec);
            missles_.WriteTo(output, _repeated_missles_codec);
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            size += objects_.CalculateSize(_repeated_objects_codec);
            size += outfits_.CalculateSize(_repeated_outfits_codec);
            size += effects_.CalculateSize(_repeated_effects_codec);
            size += missles_.CalculateSize(_repeated_missles_codec);
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Appearances other) {
            if (other == null) {
                return;
            }
            objects_.Add(other.objects_);
            outfits_.Add(other.outfits_);
            effects_.Add(other.effects_);
            missles_.Add(other.missles_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10: {
                        objects_.AddEntriesFrom(input, _repeated_objects_codec);
                        break;
                    }
                    case 18: {
                        outfits_.AddEntriesFrom(input, _repeated_outfits_codec);
                        break;
                    }
                    case 26: {
                        effects_.AddEntriesFrom(input, _repeated_effects_codec);
                        break;
                    }
                    case 34: {
                        missles_.AddEntriesFrom(input, _repeated_missles_codec);
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Appearance : pb::IMessage<Appearance>
    {
        private static readonly pb::MessageParser<Appearance> _parser = new pb::MessageParser<Appearance>(() => new Appearance());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Appearance> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearance() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearance(Appearance other) : this() {
            id_ = other.id_;
            flags_ = other.flags_ != null ? other.flags_.Clone() : null;
            frameGroups_ = other.frameGroups_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Appearance Clone() {
            return new Appearance(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Id {
            get { return id_; }
            set {
                id_ = value;
            }
        }

        /// <summary>Field number for the "flags" field.</summary>
        public const int FlagsFieldNumber = 2;
        private global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags flags_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags Flags {
            get { return flags_; }
            set {
                flags_ = value;
            }
        }

        /// <summary>Field number for the "frameGroups" field.</summary>
        public const int FrameGroupsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.FrameGroup> _repeated_frameGroups_codec
            = pb::FieldCodec.ForMessage(26, global::OpenTibiaUnity.Proto.Appearances.FrameGroup.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroup> frameGroups_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroup>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroup> FrameGroups {
            get { return frameGroups_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Appearance);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Appearance other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Id != other.Id) return false;
            if (!object.Equals(Flags, other.Flags)) return false;
            if (!frameGroups_.Equals(other.frameGroups_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Id != 0) hash ^= Id.GetHashCode();
            if (flags_ != null) hash ^= Flags.GetHashCode();
            hash ^= frameGroups_.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Id != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Id);
            }
            if (flags_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Flags);
            }
            frameGroups_.WriteTo(output, _repeated_frameGroups_codec);
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Id != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
            }
            if (flags_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flags);
            }
            size += frameGroups_.CalculateSize(_repeated_frameGroups_codec);
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Appearance other) {
            if (other == null) {
                return;
            }
            if (other.Id != 0) {
                Id = other.Id;
            }
            if (other.flags_ != null) {
                if (flags_ == null) {
                    flags_ = new global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags();
                }
                Flags.MergeFrom(other.Flags);
            }
            frameGroups_.Add(other.frameGroups_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Id = input.ReadUInt32();
                        break;
                    }
                    case 18: {
                        if (flags_ == null) {
                            flags_ = new global::OpenTibiaUnity.Proto.Appearances.AppearanceFlags();
                        }
                        input.ReadMessage(flags_);
                        break;
                    }
                    case 26: {
                        frameGroups_.AddEntriesFrom(input, _repeated_frameGroups_codec);
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class AppearanceFlags : pb::IMessage<AppearanceFlags>
    {
        private static readonly pb::MessageParser<AppearanceFlags> _parser = new pb::MessageParser<AppearanceFlags>(() => new AppearanceFlags());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppearanceFlags> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppearanceFlags() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppearanceFlags(AppearanceFlags other) : this() {
            ground_ = other.ground_ != null ? other.ground_.Clone() : null;
            groundBorder_ = other.groundBorder_;
            bottom_ = other.bottom_;
            top_ = other.top_;
            container_ = other.container_;
            stackable_ = other.stackable_;
            ForceUse_ = other.ForceUse_;
            MultiUse_ = other.MultiUse_;
            writable_ = other.writable_ != null ? other.writable_.Clone() : null;
            writableOnce_ = other.writableOnce_ != null ? other.writableOnce_.Clone() : null;
            fluidContainer_ = other.fluidContainer_;
            splash_ = other.splash_;
            unpassable_ = other.unpassable_;
            unmoveable_ = other.unmoveable_;
            unsight_ = other.unsight_;
            blockPath_ = other.blockPath_;
            pickupable_ = other.pickupable_;
            hangable_ = other.hangable_;
            hook_ = other.hook_ != null ? other.hook_.Clone() : null;
            rotateable_ = other.rotateable_;
            light_ = other.light_ != null ? other.light_.Clone() : null;
            dontHide_ = other.dontHide_;
            translucent_ = other.translucent_;
            displacement_ = other.displacement_ != null ? other.displacement_.Clone() : null;
            elevation_ = other.elevation_ != null ? other.elevation_.Clone() : null;
            lyingCorpse_ = other.lyingCorpse_;
            animateAlways_ = other.animateAlways_;
            minimap_ = other.minimap_ != null ? other.minimap_.Clone() : null;
            lensHelp_ = other.lensHelp_ != null ? other.lensHelp_.Clone() : null;
            fullGround_ = other.fullGround_;
            look_ = other.look_;
            cloth_ = other.cloth_ != null ? other.cloth_.Clone() : null;
            market_ = other.market_ != null ? other.market_.Clone() : null;
            defaultAction_ = other.defaultAction_ != null ? other.defaultAction_.Clone() : null;
            use_ = other.use_;
            wrapable_ = other.wrapable_;
            unWrapable_ = other.unWrapable_;
            topEffect_ = other.topEffect_;
            floorChange_ = other.floorChange_;
            noMoveAnimation_ = other.noMoveAnimation_;
            charges_ = other.charges_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppearanceFlags Clone() {
            return new AppearanceFlags(this);
        }

        /// <summary>Field number for the "ground" field.</summary>
        public const int GroundFieldNumber = 1;
        private global::OpenTibiaUnity.Proto.Appearances.Ground ground_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Ground Ground {
            get { return ground_; }
            set {
                ground_ = value;
            }
        }

        /// <summary>Field number for the "groundBorder" field.</summary>
        public const int GroundBorderFieldNumber = 2;
        private bool groundBorder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool GroundBorder {
            get { return groundBorder_; }
            set {
                groundBorder_ = value;
            }
        }

        /// <summary>Field number for the "bottom" field.</summary>
        public const int BottomFieldNumber = 3;
        private bool bottom_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Bottom {
            get { return bottom_; }
            set {
                bottom_ = value;
            }
        }

        /// <summary>Field number for the "top" field.</summary>
        public const int TopFieldNumber = 4;
        private bool top_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Top {
            get { return top_; }
            set {
                top_ = value;
            }
        }

        /// <summary>Field number for the "container" field.</summary>
        public const int ContainerFieldNumber = 5;
        private bool container_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Container {
            get { return container_; }
            set {
                container_ = value;
            }
        }

        /// <summary>Field number for the "stackable" field.</summary>
        public const int StackableFieldNumber = 6;
        private bool stackable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Stackable {
            get { return stackable_; }
            set {
                stackable_ = value;
            }
        }

        /// <summary>Field number for the "ForceUse" field.</summary>
        public const int ForceUseFieldNumber = 7;
        private bool ForceUse_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ForceUse {
            get { return ForceUse_; }
            set {
                ForceUse_ = value;
            }
        }

        /// <summary>Field number for the "MultiUse" field.</summary>
        public const int MultiUseFieldNumber = 8;
        private bool MultiUse_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool MultiUse {
            get { return MultiUse_; }
            set {
                MultiUse_ = value;
            }
        }

        /// <summary>Field number for the "writable" field.</summary>
        public const int WritableFieldNumber = 9;
        private global::OpenTibiaUnity.Proto.Appearances.Writable writable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Writable Writable {
            get { return writable_; }
            set {
                writable_ = value;
            }
        }

        /// <summary>Field number for the "writableOnce" field.</summary>
        public const int WritableOnceFieldNumber = 10;
        private global::OpenTibiaUnity.Proto.Appearances.Writable writableOnce_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Writable WritableOnce {
            get { return writableOnce_; }
            set {
                writableOnce_ = value;
            }
        }

        /// <summary>Field number for the "fluidContainer" field.</summary>
        public const int FluidContainerFieldNumber = 11;
        private bool fluidContainer_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool FluidContainer {
            get { return fluidContainer_; }
            set {
                fluidContainer_ = value;
            }
        }

        /// <summary>Field number for the "splash" field.</summary>
        public const int SplashFieldNumber = 12;
        private bool splash_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Splash {
            get { return splash_; }
            set {
                splash_ = value;
            }
        }

        /// <summary>Field number for the "unpassable" field.</summary>
        public const int UnpassableFieldNumber = 13;
        private bool unpassable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Unpassable {
            get { return unpassable_; }
            set {
                unpassable_ = value;
            }
        }

        /// <summary>Field number for the "unmoveable" field.</summary>
        public const int UnmoveableFieldNumber = 14;
        private bool unmoveable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Unmoveable {
            get { return unmoveable_; }
            set {
                unmoveable_ = value;
            }
        }

        /// <summary>Field number for the "unsight" field.</summary>
        public const int UnsightFieldNumber = 15;
        private bool unsight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Unsight {
            get { return unsight_; }
            set {
                unsight_ = value;
            }
        }

        /// <summary>Field number for the "blockPath" field.</summary>
        public const int BlockPathFieldNumber = 16;
        private bool blockPath_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool BlockPath {
            get { return blockPath_; }
            set {
                blockPath_ = value;
            }
        }

        /// <summary>Field number for the "pickupable" field.</summary>
        public const int PickupableFieldNumber = 17;
        private bool pickupable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Pickupable {
            get { return pickupable_; }
            set {
                pickupable_ = value;
            }
        }

        /// <summary>Field number for the "hangable" field.</summary>
        public const int HangableFieldNumber = 18;
        private bool hangable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Hangable {
            get { return hangable_; }
            set {
                hangable_ = value;
            }
        }

        /// <summary>Field number for the "hook" field.</summary>
        public const int HookFieldNumber = 19;
        private global::OpenTibiaUnity.Proto.Appearances.Hook hook_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Hook Hook {
            get { return hook_; }
            set {
                hook_ = value;
            }
        }

        /// <summary>Field number for the "rotateable" field.</summary>
        public const int RotateableFieldNumber = 20;
        private bool rotateable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Rotateable {
            get { return rotateable_; }
            set {
                rotateable_ = value;
            }
        }

        /// <summary>Field number for the "light" field.</summary>
        public const int LightFieldNumber = 21;
        private global::OpenTibiaUnity.Proto.Appearances.LightInfo light_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.LightInfo Light {
            get { return light_; }
            set {
                light_ = value;
            }
        }

        /// <summary>Field number for the "dontHide" field.</summary>
        public const int DontHideFieldNumber = 22;
        private bool dontHide_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool DontHide {
            get { return dontHide_; }
            set {
                dontHide_ = value;
            }
        }

        /// <summary>Field number for the "translucent" field.</summary>
        public const int TranslucentFieldNumber = 23;
        private bool translucent_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Translucent {
            get { return translucent_; }
            set {
                translucent_ = value;
            }
        }

        /// <summary>Field number for the "displacement" field.</summary>
        public const int DisplacementFieldNumber = 24;
        private global::OpenTibiaUnity.Proto.Appearances.Displacement displacement_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Displacement Displacement {
            get { return displacement_; }
            set {
                displacement_ = value;
            }
        }

        /// <summary>Field number for the "elevation" field.</summary>
        public const int ElevationFieldNumber = 25;
        private global::OpenTibiaUnity.Proto.Appearances.Elevation elevation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Elevation Elevation {
            get { return elevation_; }
            set {
                elevation_ = value;
            }
        }

        /// <summary>Field number for the "lyingCorpse" field.</summary>
        public const int LyingCorpseFieldNumber = 26;
        private bool lyingCorpse_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool LyingCorpse {
            get { return lyingCorpse_; }
            set {
                lyingCorpse_ = value;
            }
        }

        /// <summary>Field number for the "animateAlways" field.</summary>
        public const int AnimateAlwaysFieldNumber = 27;
        private bool animateAlways_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool AnimateAlways {
            get { return animateAlways_; }
            set {
                animateAlways_ = value;
            }
        }

        /// <summary>Field number for the "minimap" field.</summary>
        public const int MinimapFieldNumber = 28;
        private global::OpenTibiaUnity.Proto.Appearances.MiniMap minimap_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.MiniMap Minimap {
            get { return minimap_; }
            set {
                minimap_ = value;
            }
        }

        /// <summary>Field number for the "lensHelp" field.</summary>
        public const int LensHelpFieldNumber = 29;
        private global::OpenTibiaUnity.Proto.Appearances.LensHelp lensHelp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.LensHelp LensHelp {
            get { return lensHelp_; }
            set {
                lensHelp_ = value;
            }
        }

        /// <summary>Field number for the "fullGround" field.</summary>
        public const int FullGroundFieldNumber = 30;
        private bool fullGround_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool FullGround {
            get { return fullGround_; }
            set {
                fullGround_ = value;
            }
        }

        /// <summary>Field number for the "Look" field.</summary>
        public const int LookFieldNumber = 31;
        private bool look_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Look {
            get { return look_; }
            set {
                look_ = value;
            }
        }

        /// <summary>Field number for the "cloth" field.</summary>
        public const int ClothFieldNumber = 32;
        private global::OpenTibiaUnity.Proto.Appearances.Clothes cloth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.Clothes Cloth {
            get { return cloth_; }
            set {
                cloth_ = value;
            }
        }

        /// <summary>Field number for the "market" field.</summary>
        public const int MarketFieldNumber = 33;
        private global::OpenTibiaUnity.Proto.Appearances.MarketInfo market_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.MarketInfo Market {
            get { return market_; }
            set {
                market_ = value;
            }
        }

        /// <summary>Field number for the "defaultAction" field.</summary>
        public const int DefaultActionFieldNumber = 34;
        private global::OpenTibiaUnity.Proto.Appearances.DefaultAction defaultAction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.DefaultAction DefaultAction {
            get { return defaultAction_; }
            set {
                defaultAction_ = value;
            }
        }

        /// <summary>Field number for the "use" field.</summary>
        public const int UseFieldNumber = 35;
        private bool use_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Use {
            get { return use_; }
            set {
                use_ = value;
            }
        }

        /// <summary>Field number for the "wrapable" field.</summary>
        public const int WrapableFieldNumber = 36;
        private bool wrapable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Wrapable {
            get { return wrapable_; }
            set {
                wrapable_ = value;
            }
        }

        /// <summary>Field number for the "unWrapable" field.</summary>
        public const int UnWrapableFieldNumber = 37;
        private bool unWrapable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool UnWrapable {
            get { return unWrapable_; }
            set {
                unWrapable_ = value;
            }
        }

        /// <summary>Field number for the "topEffect" field.</summary>
        public const int TopEffectFieldNumber = 38;
        private bool topEffect_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool TopEffect {
            get { return topEffect_; }
            set {
                topEffect_ = value;
            }
        }

        /// <summary>Field number for the "floorChange" field.</summary>
        public const int FloorChangeFieldNumber = 252;
        private bool floorChange_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool FloorChange {
            get { return floorChange_; }
            set {
                floorChange_ = value;
            }
        }

        /// <summary>Field number for the "noMoveAnimation" field.</summary>
        public const int NoMoveAnimationFieldNumber = 253;
        private bool noMoveAnimation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool NoMoveAnimation {
            get { return noMoveAnimation_; }
            set {
                noMoveAnimation_ = value;
            }
        }

        /// <summary>Field number for the "charges" field.</summary>
        public const int ChargesFieldNumber = 254;
        private bool charges_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Charges {
            get { return charges_; }
            set {
                charges_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as AppearanceFlags);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppearanceFlags other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (!object.Equals(Ground, other.Ground)) return false;
            if (GroundBorder != other.GroundBorder) return false;
            if (Bottom != other.Bottom) return false;
            if (Top != other.Top) return false;
            if (Container != other.Container) return false;
            if (Stackable != other.Stackable) return false;
            if (ForceUse != other.ForceUse) return false;
            if (MultiUse != other.MultiUse) return false;
            if (!object.Equals(Writable, other.Writable)) return false;
            if (!object.Equals(WritableOnce, other.WritableOnce)) return false;
            if (FluidContainer != other.FluidContainer) return false;
            if (Splash != other.Splash) return false;
            if (Unpassable != other.Unpassable) return false;
            if (Unmoveable != other.Unmoveable) return false;
            if (Unsight != other.Unsight) return false;
            if (BlockPath != other.BlockPath) return false;
            if (Pickupable != other.Pickupable) return false;
            if (Hangable != other.Hangable) return false;
            if (!object.Equals(Hook, other.Hook)) return false;
            if (Rotateable != other.Rotateable) return false;
            if (!object.Equals(Light, other.Light)) return false;
            if (DontHide != other.DontHide) return false;
            if (Translucent != other.Translucent) return false;
            if (!object.Equals(Displacement, other.Displacement)) return false;
            if (!object.Equals(Elevation, other.Elevation)) return false;
            if (LyingCorpse != other.LyingCorpse) return false;
            if (AnimateAlways != other.AnimateAlways) return false;
            if (!object.Equals(Minimap, other.Minimap)) return false;
            if (!object.Equals(LensHelp, other.LensHelp)) return false;
            if (FullGround != other.FullGround) return false;
            if (Look != other.Look) return false;
            if (!object.Equals(Cloth, other.Cloth)) return false;
            if (!object.Equals(Market, other.Market)) return false;
            if (!object.Equals(DefaultAction, other.DefaultAction)) return false;
            if (Use != other.Use) return false;
            if (Wrapable != other.Wrapable) return false;
            if (UnWrapable != other.UnWrapable) return false;
            if (TopEffect != other.TopEffect) return false;
            if (FloorChange != other.FloorChange) return false;
            if (NoMoveAnimation != other.NoMoveAnimation) return false;
            if (Charges != other.Charges) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (ground_ != null) hash ^= Ground.GetHashCode();
            if (GroundBorder != false) hash ^= GroundBorder.GetHashCode();
            if (Bottom != false) hash ^= Bottom.GetHashCode();
            if (Top != false) hash ^= Top.GetHashCode();
            if (Container != false) hash ^= Container.GetHashCode();
            if (Stackable != false) hash ^= Stackable.GetHashCode();
            if (ForceUse != false) hash ^= ForceUse.GetHashCode();
            if (MultiUse != false) hash ^= MultiUse.GetHashCode();
            if (writable_ != null) hash ^= Writable.GetHashCode();
            if (writableOnce_ != null) hash ^= WritableOnce.GetHashCode();
            if (FluidContainer != false) hash ^= FluidContainer.GetHashCode();
            if (Splash != false) hash ^= Splash.GetHashCode();
            if (Unpassable != false) hash ^= Unpassable.GetHashCode();
            if (Unmoveable != false) hash ^= Unmoveable.GetHashCode();
            if (Unsight != false) hash ^= Unsight.GetHashCode();
            if (BlockPath != false) hash ^= BlockPath.GetHashCode();
            if (Pickupable != false) hash ^= Pickupable.GetHashCode();
            if (Hangable != false) hash ^= Hangable.GetHashCode();
            if (hook_ != null) hash ^= Hook.GetHashCode();
            if (Rotateable != false) hash ^= Rotateable.GetHashCode();
            if (light_ != null) hash ^= Light.GetHashCode();
            if (DontHide != false) hash ^= DontHide.GetHashCode();
            if (Translucent != false) hash ^= Translucent.GetHashCode();
            if (displacement_ != null) hash ^= Displacement.GetHashCode();
            if (elevation_ != null) hash ^= Elevation.GetHashCode();
            if (LyingCorpse != false) hash ^= LyingCorpse.GetHashCode();
            if (AnimateAlways != false) hash ^= AnimateAlways.GetHashCode();
            if (minimap_ != null) hash ^= Minimap.GetHashCode();
            if (lensHelp_ != null) hash ^= LensHelp.GetHashCode();
            if (FullGround != false) hash ^= FullGround.GetHashCode();
            if (Look != false) hash ^= Look.GetHashCode();
            if (cloth_ != null) hash ^= Cloth.GetHashCode();
            if (market_ != null) hash ^= Market.GetHashCode();
            if (defaultAction_ != null) hash ^= DefaultAction.GetHashCode();
            if (Use != false) hash ^= Use.GetHashCode();
            if (Wrapable != false) hash ^= Wrapable.GetHashCode();
            if (UnWrapable != false) hash ^= UnWrapable.GetHashCode();
            if (TopEffect != false) hash ^= TopEffect.GetHashCode();
            if (FloorChange != false) hash ^= FloorChange.GetHashCode();
            if (NoMoveAnimation != false) hash ^= NoMoveAnimation.GetHashCode();
            if (Charges != false) hash ^= Charges.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (ground_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Ground);
            }
            if (GroundBorder != false) {
                output.WriteRawTag(16);
                output.WriteBool(GroundBorder);
            }
            if (Bottom != false) {
                output.WriteRawTag(24);
                output.WriteBool(Bottom);
            }
            if (Top != false) {
                output.WriteRawTag(32);
                output.WriteBool(Top);
            }
            if (Container != false) {
                output.WriteRawTag(40);
                output.WriteBool(Container);
            }
            if (Stackable != false) {
                output.WriteRawTag(48);
                output.WriteBool(Stackable);
            }
            if (ForceUse != false) {
                output.WriteRawTag(56);
                output.WriteBool(ForceUse);
            }
            if (MultiUse != false) {
                output.WriteRawTag(64);
                output.WriteBool(MultiUse);
            }
            if (writable_ != null) {
                output.WriteRawTag(74);
                output.WriteMessage(Writable);
            }
            if (writableOnce_ != null) {
                output.WriteRawTag(82);
                output.WriteMessage(WritableOnce);
            }
            if (FluidContainer != false) {
                output.WriteRawTag(88);
                output.WriteBool(FluidContainer);
            }
            if (Splash != false) {
                output.WriteRawTag(96);
                output.WriteBool(Splash);
            }
            if (Unpassable != false) {
                output.WriteRawTag(104);
                output.WriteBool(Unpassable);
            }
            if (Unmoveable != false) {
                output.WriteRawTag(112);
                output.WriteBool(Unmoveable);
            }
            if (Unsight != false) {
                output.WriteRawTag(120);
                output.WriteBool(Unsight);
            }
            if (BlockPath != false) {
                output.WriteRawTag(128, 1);
                output.WriteBool(BlockPath);
            }
            if (Pickupable != false) {
                output.WriteRawTag(136, 1);
                output.WriteBool(Pickupable);
            }
            if (Hangable != false) {
                output.WriteRawTag(144, 1);
                output.WriteBool(Hangable);
            }
            if (hook_ != null) {
                output.WriteRawTag(154, 1);
                output.WriteMessage(Hook);
            }
            if (Rotateable != false) {
                output.WriteRawTag(160, 1);
                output.WriteBool(Rotateable);
            }
            if (light_ != null) {
                output.WriteRawTag(170, 1);
                output.WriteMessage(Light);
            }
            if (DontHide != false) {
                output.WriteRawTag(176, 1);
                output.WriteBool(DontHide);
            }
            if (Translucent != false) {
                output.WriteRawTag(184, 1);
                output.WriteBool(Translucent);
            }
            if (displacement_ != null) {
                output.WriteRawTag(194, 1);
                output.WriteMessage(Displacement);
            }
            if (elevation_ != null) {
                output.WriteRawTag(202, 1);
                output.WriteMessage(Elevation);
            }
            if (LyingCorpse != false) {
                output.WriteRawTag(208, 1);
                output.WriteBool(LyingCorpse);
            }
            if (AnimateAlways != false) {
                output.WriteRawTag(216, 1);
                output.WriteBool(AnimateAlways);
            }
            if (minimap_ != null) {
                output.WriteRawTag(226, 1);
                output.WriteMessage(Minimap);
            }
            if (lensHelp_ != null) {
                output.WriteRawTag(234, 1);
                output.WriteMessage(LensHelp);
            }
            if (FullGround != false) {
                output.WriteRawTag(240, 1);
                output.WriteBool(FullGround);
            }
            if (Look != false) {
                output.WriteRawTag(248, 1);
                output.WriteBool(Look);
            }
            if (cloth_ != null) {
                output.WriteRawTag(130, 2);
                output.WriteMessage(Cloth);
            }
            if (market_ != null) {
                output.WriteRawTag(138, 2);
                output.WriteMessage(Market);
            }
            if (defaultAction_ != null) {
                output.WriteRawTag(146, 2);
                output.WriteMessage(DefaultAction);
            }
            if (Use != false) {
                output.WriteRawTag(152, 2);
                output.WriteBool(Use);
            }
            if (Wrapable != false) {
                output.WriteRawTag(160, 2);
                output.WriteBool(Wrapable);
            }
            if (UnWrapable != false) {
                output.WriteRawTag(168, 2);
                output.WriteBool(UnWrapable);
            }
            if (TopEffect != false) {
                output.WriteRawTag(176, 2);
                output.WriteBool(TopEffect);
            }
            if (FloorChange != false) {
                output.WriteRawTag(224, 15);
                output.WriteBool(FloorChange);
            }
            if (NoMoveAnimation != false) {
                output.WriteRawTag(232, 15);
                output.WriteBool(NoMoveAnimation);
            }
            if (Charges != false) {
                output.WriteRawTag(240, 15);
                output.WriteBool(Charges);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (ground_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ground);
            }
            if (GroundBorder != false) {
                size += 1 + 1;
            }
            if (Bottom != false) {
                size += 1 + 1;
            }
            if (Top != false) {
                size += 1 + 1;
            }
            if (Container != false) {
                size += 1 + 1;
            }
            if (Stackable != false) {
                size += 1 + 1;
            }
            if (ForceUse != false) {
                size += 1 + 1;
            }
            if (MultiUse != false) {
                size += 1 + 1;
            }
            if (writable_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Writable);
            }
            if (writableOnce_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(WritableOnce);
            }
            if (FluidContainer != false) {
                size += 1 + 1;
            }
            if (Splash != false) {
                size += 1 + 1;
            }
            if (Unpassable != false) {
                size += 1 + 1;
            }
            if (Unmoveable != false) {
                size += 1 + 1;
            }
            if (Unsight != false) {
                size += 1 + 1;
            }
            if (BlockPath != false) {
                size += 2 + 1;
            }
            if (Pickupable != false) {
                size += 2 + 1;
            }
            if (Hangable != false) {
                size += 2 + 1;
            }
            if (hook_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Hook);
            }
            if (Rotateable != false) {
                size += 2 + 1;
            }
            if (light_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Light);
            }
            if (DontHide != false) {
                size += 2 + 1;
            }
            if (Translucent != false) {
                size += 2 + 1;
            }
            if (displacement_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Displacement);
            }
            if (elevation_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Elevation);
            }
            if (LyingCorpse != false) {
                size += 2 + 1;
            }
            if (AnimateAlways != false) {
                size += 2 + 1;
            }
            if (minimap_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Minimap);
            }
            if (lensHelp_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(LensHelp);
            }
            if (FullGround != false) {
                size += 2 + 1;
            }
            if (Look != false) {
                size += 2 + 1;
            }
            if (cloth_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Cloth);
            }
            if (market_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Market);
            }
            if (defaultAction_ != null) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefaultAction);
            }
            if (Use != false) {
                size += 2 + 1;
            }
            if (Wrapable != false) {
                size += 2 + 1;
            }
            if (UnWrapable != false) {
                size += 2 + 1;
            }
            if (TopEffect != false) {
                size += 2 + 1;
            }
            if (FloorChange != false) {
                size += 2 + 1;
            }
            if (NoMoveAnimation != false) {
                size += 2 + 1;
            }
            if (Charges != false) {
                size += 2 + 1;
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppearanceFlags other) {
            if (other == null) {
                return;
            }
            if (other.ground_ != null) {
                if (ground_ == null) {
                    ground_ = new global::OpenTibiaUnity.Proto.Appearances.Ground();
                }
                Ground.MergeFrom(other.Ground);
            }
            if (other.GroundBorder != false) {
                GroundBorder = other.GroundBorder;
            }
            if (other.Bottom != false) {
                Bottom = other.Bottom;
            }
            if (other.Top != false) {
                Top = other.Top;
            }
            if (other.Container != false) {
                Container = other.Container;
            }
            if (other.Stackable != false) {
                Stackable = other.Stackable;
            }
            if (other.ForceUse != false) {
                ForceUse = other.ForceUse;
            }
            if (other.MultiUse != false) {
                MultiUse = other.MultiUse;
            }
            if (other.writable_ != null) {
                if (writable_ == null) {
                    writable_ = new global::OpenTibiaUnity.Proto.Appearances.Writable();
                }
                Writable.MergeFrom(other.Writable);
            }
            if (other.writableOnce_ != null) {
                if (writableOnce_ == null) {
                    writableOnce_ = new global::OpenTibiaUnity.Proto.Appearances.Writable();
                }
                WritableOnce.MergeFrom(other.WritableOnce);
            }
            if (other.FluidContainer != false) {
                FluidContainer = other.FluidContainer;
            }
            if (other.Splash != false) {
                Splash = other.Splash;
            }
            if (other.Unpassable != false) {
                Unpassable = other.Unpassable;
            }
            if (other.Unmoveable != false) {
                Unmoveable = other.Unmoveable;
            }
            if (other.Unsight != false) {
                Unsight = other.Unsight;
            }
            if (other.BlockPath != false) {
                BlockPath = other.BlockPath;
            }
            if (other.Pickupable != false) {
                Pickupable = other.Pickupable;
            }
            if (other.Hangable != false) {
                Hangable = other.Hangable;
            }
            if (other.hook_ != null) {
                if (hook_ == null) {
                    hook_ = new global::OpenTibiaUnity.Proto.Appearances.Hook();
                }
                Hook.MergeFrom(other.Hook);
            }
            if (other.Rotateable != false) {
                Rotateable = other.Rotateable;
            }
            if (other.light_ != null) {
                if (light_ == null) {
                    light_ = new global::OpenTibiaUnity.Proto.Appearances.LightInfo();
                }
                Light.MergeFrom(other.Light);
            }
            if (other.DontHide != false) {
                DontHide = other.DontHide;
            }
            if (other.Translucent != false) {
                Translucent = other.Translucent;
            }
            if (other.displacement_ != null) {
                if (displacement_ == null) {
                    displacement_ = new global::OpenTibiaUnity.Proto.Appearances.Displacement();
                }
                Displacement.MergeFrom(other.Displacement);
            }
            if (other.elevation_ != null) {
                if (elevation_ == null) {
                    elevation_ = new global::OpenTibiaUnity.Proto.Appearances.Elevation();
                }
                Elevation.MergeFrom(other.Elevation);
            }
            if (other.LyingCorpse != false) {
                LyingCorpse = other.LyingCorpse;
            }
            if (other.AnimateAlways != false) {
                AnimateAlways = other.AnimateAlways;
            }
            if (other.minimap_ != null) {
                if (minimap_ == null) {
                    minimap_ = new global::OpenTibiaUnity.Proto.Appearances.MiniMap();
                }
                Minimap.MergeFrom(other.Minimap);
            }
            if (other.lensHelp_ != null) {
                if (lensHelp_ == null) {
                    lensHelp_ = new global::OpenTibiaUnity.Proto.Appearances.LensHelp();
                }
                LensHelp.MergeFrom(other.LensHelp);
            }
            if (other.FullGround != false) {
                FullGround = other.FullGround;
            }
            if (other.Look != false) {
                Look = other.Look;
            }
            if (other.cloth_ != null) {
                if (cloth_ == null) {
                    cloth_ = new global::OpenTibiaUnity.Proto.Appearances.Clothes();
                }
                Cloth.MergeFrom(other.Cloth);
            }
            if (other.market_ != null) {
                if (market_ == null) {
                    market_ = new global::OpenTibiaUnity.Proto.Appearances.MarketInfo();
                }
                Market.MergeFrom(other.Market);
            }
            if (other.defaultAction_ != null) {
                if (defaultAction_ == null) {
                    defaultAction_ = new global::OpenTibiaUnity.Proto.Appearances.DefaultAction();
                }
                DefaultAction.MergeFrom(other.DefaultAction);
            }
            if (other.Use != false) {
                Use = other.Use;
            }
            if (other.Wrapable != false) {
                Wrapable = other.Wrapable;
            }
            if (other.UnWrapable != false) {
                UnWrapable = other.UnWrapable;
            }
            if (other.TopEffect != false) {
                TopEffect = other.TopEffect;
            }
            if (other.FloorChange != false) {
                FloorChange = other.FloorChange;
            }
            if (other.NoMoveAnimation != false) {
                NoMoveAnimation = other.NoMoveAnimation;
            }
            if (other.Charges != false) {
                Charges = other.Charges;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10: {
                        if (ground_ == null) {
                            ground_ = new global::OpenTibiaUnity.Proto.Appearances.Ground();
                        }
                        input.ReadMessage(ground_);
                        break;
                    }
                    case 16: {
                        GroundBorder = input.ReadBool();
                        break;
                    }
                    case 24: {
                        Bottom = input.ReadBool();
                        break;
                    }
                    case 32: {
                        Top = input.ReadBool();
                        break;
                    }
                    case 40: {
                        Container = input.ReadBool();
                        break;
                    }
                    case 48: {
                        Stackable = input.ReadBool();
                        break;
                    }
                    case 56: {
                        ForceUse = input.ReadBool();
                        break;
                    }
                    case 64: {
                        MultiUse = input.ReadBool();
                        break;
                    }
                    case 74: {
                        if (writable_ == null) {
                            writable_ = new global::OpenTibiaUnity.Proto.Appearances.Writable();
                        }
                        input.ReadMessage(writable_);
                        break;
                    }
                    case 82: {
                        if (writableOnce_ == null) {
                            writableOnce_ = new global::OpenTibiaUnity.Proto.Appearances.Writable();
                        }
                        input.ReadMessage(writableOnce_);
                        break;
                    }
                    case 88: {
                        FluidContainer = input.ReadBool();
                        break;
                    }
                    case 96: {
                        Splash = input.ReadBool();
                        break;
                    }
                    case 104: {
                        Unpassable = input.ReadBool();
                        break;
                    }
                    case 112: {
                        Unmoveable = input.ReadBool();
                        break;
                    }
                    case 120: {
                        Unsight = input.ReadBool();
                        break;
                    }
                    case 128: {
                        BlockPath = input.ReadBool();
                        break;
                    }
                    case 136: {
                        Pickupable = input.ReadBool();
                        break;
                    }
                    case 144: {
                        Hangable = input.ReadBool();
                        break;
                    }
                    case 154: {
                        if (hook_ == null) {
                            hook_ = new global::OpenTibiaUnity.Proto.Appearances.Hook();
                        }
                        input.ReadMessage(hook_);
                        break;
                    }
                    case 160: {
                        Rotateable = input.ReadBool();
                        break;
                    }
                    case 170: {
                        if (light_ == null) {
                            light_ = new global::OpenTibiaUnity.Proto.Appearances.LightInfo();
                        }
                        input.ReadMessage(light_);
                        break;
                    }
                    case 176: {
                        DontHide = input.ReadBool();
                        break;
                    }
                    case 184: {
                        Translucent = input.ReadBool();
                        break;
                    }
                    case 194: {
                        if (displacement_ == null) {
                            displacement_ = new global::OpenTibiaUnity.Proto.Appearances.Displacement();
                        }
                        input.ReadMessage(displacement_);
                        break;
                    }
                    case 202: {
                        if (elevation_ == null) {
                            elevation_ = new global::OpenTibiaUnity.Proto.Appearances.Elevation();
                        }
                        input.ReadMessage(elevation_);
                        break;
                    }
                    case 208: {
                        LyingCorpse = input.ReadBool();
                        break;
                    }
                    case 216: {
                        AnimateAlways = input.ReadBool();
                        break;
                    }
                    case 226: {
                        if (minimap_ == null) {
                            minimap_ = new global::OpenTibiaUnity.Proto.Appearances.MiniMap();
                        }
                        input.ReadMessage(minimap_);
                        break;
                    }
                    case 234: {
                        if (lensHelp_ == null) {
                            lensHelp_ = new global::OpenTibiaUnity.Proto.Appearances.LensHelp();
                        }
                        input.ReadMessage(lensHelp_);
                        break;
                    }
                    case 240: {
                        FullGround = input.ReadBool();
                        break;
                    }
                    case 248: {
                        Look = input.ReadBool();
                        break;
                    }
                    case 258: {
                        if (cloth_ == null) {
                            cloth_ = new global::OpenTibiaUnity.Proto.Appearances.Clothes();
                        }
                        input.ReadMessage(cloth_);
                        break;
                    }
                    case 266: {
                        if (market_ == null) {
                            market_ = new global::OpenTibiaUnity.Proto.Appearances.MarketInfo();
                        }
                        input.ReadMessage(market_);
                        break;
                    }
                    case 274: {
                        if (defaultAction_ == null) {
                            defaultAction_ = new global::OpenTibiaUnity.Proto.Appearances.DefaultAction();
                        }
                        input.ReadMessage(defaultAction_);
                        break;
                    }
                    case 280: {
                        Use = input.ReadBool();
                        break;
                    }
                    case 288: {
                        Wrapable = input.ReadBool();
                        break;
                    }
                    case 296: {
                        UnWrapable = input.ReadBool();
                        break;
                    }
                    case 304: {
                        TopEffect = input.ReadBool();
                        break;
                    }
                    case 2016: {
                        FloorChange = input.ReadBool();
                        break;
                    }
                    case 2024: {
                        NoMoveAnimation = input.ReadBool();
                        break;
                    }
                    case 2032: {
                        Charges = input.ReadBool();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Ground : pb::IMessage<Ground>
    {
        private static readonly pb::MessageParser<Ground> _parser = new pb::MessageParser<Ground>(() => new Ground());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Ground> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ground() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ground(Ground other) : this() {
            speed_ = other.speed_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Ground Clone() {
            return new Ground(this);
        }

        /// <summary>Field number for the "speed" field.</summary>
        public const int SpeedFieldNumber = 1;
        private uint speed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Speed {
            get { return speed_; }
            set {
                speed_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Ground);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Ground other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Speed != other.Speed) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Speed != 0) hash ^= Speed.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Speed != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Speed);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Speed != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Speed);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Ground other) {
            if (other == null) {
                return;
            }
            if (other.Speed != 0) {
                Speed = other.Speed;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Speed = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Writable : pb::IMessage<Writable>
    {
        private static readonly pb::MessageParser<Writable> _parser = new pb::MessageParser<Writable>(() => new Writable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Writable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Writable() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Writable(Writable other) : this() {
            length_ = other.length_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Writable Clone() {
            return new Writable(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private uint length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Length {
            get { return length_; }
            set {
                length_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Writable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Writable other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Length != other.Length) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Length != 0) hash ^= Length.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Length != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Length);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Writable other) {
            if (other == null) {
                return;
            }
            if (other.Length != 0) {
                Length = other.Length;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Length = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Hook : pb::IMessage<Hook>
    {
        private static readonly pb::MessageParser<Hook> _parser = new pb::MessageParser<Hook>(() => new Hook());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Hook> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hook() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hook(Hook other) : this() {
            type_ = other.type_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hook Clone() {
            return new Hook(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::OpenTibiaUnity.Proto.Appearances.HookType type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.HookType Type {
            get { return type_; }
            set {
                type_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Hook);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Hook other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Type != other.Type) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Type != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Type != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Hook other) {
            if (other == null) {
                return;
            }
            if (other.Type != 0) {
                Type = other.Type;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        type_ = (global::OpenTibiaUnity.Proto.Appearances.HookType)input.ReadEnum();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class LightInfo : pb::IMessage<LightInfo>
    {
        private static readonly pb::MessageParser<LightInfo> _parser = new pb::MessageParser<LightInfo>(() => new LightInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LightInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LightInfo() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LightInfo(LightInfo other) : this() {
            intensity_ = other.intensity_;
            color_ = other.color_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LightInfo Clone() {
            return new LightInfo(this);
        }

        /// <summary>Field number for the "intensity" field.</summary>
        public const int IntensityFieldNumber = 1;
        private uint intensity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Intensity {
            get { return intensity_; }
            set {
                intensity_ = value;
            }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 2;
        private uint color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Color {
            get { return color_; }
            set {
                color_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as LightInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LightInfo other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Intensity != other.Intensity) return false;
            if (Color != other.Color) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Intensity != 0) hash ^= Intensity.GetHashCode();
            if (Color != 0) hash ^= Color.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Intensity != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Intensity);
            }
            if (Color != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Color);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Intensity != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Intensity);
            }
            if (Color != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Color);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LightInfo other) {
            if (other == null) {
                return;
            }
            if (other.Intensity != 0) {
                Intensity = other.Intensity;
            }
            if (other.Color != 0) {
                Color = other.Color;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Intensity = input.ReadUInt32();
                        break;
                    }
                    case 16: {
                        Color = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class MiniMap : pb::IMessage<MiniMap>
    {
        private static readonly pb::MessageParser<MiniMap> _parser = new pb::MessageParser<MiniMap>(() => new MiniMap());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MiniMap> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MiniMap() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MiniMap(MiniMap other) : this() {
            color_ = other.color_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MiniMap Clone() {
            return new MiniMap(this);
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 1;
        private uint color_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Color {
            get { return color_; }
            set {
                color_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as MiniMap);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MiniMap other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Color != other.Color) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Color != 0) hash ^= Color.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Color != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Color);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Color != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Color);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MiniMap other) {
            if (other == null) {
                return;
            }
            if (other.Color != 0) {
                Color = other.Color;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Color = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Displacement : pb::IMessage<Displacement>
    {
        private static readonly pb::MessageParser<Displacement> _parser = new pb::MessageParser<Displacement>(() => new Displacement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Displacement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Displacement() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Displacement(Displacement other) : this() {
            x_ = other.x_;
            y_ = other.y_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Displacement Clone() {
            return new Displacement(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private uint x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint X {
            get { return x_; }
            set {
                x_ = value;
            }
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private uint y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Y {
            get { return y_; }
            set {
                y_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Displacement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Displacement other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (X != other.X) return false;
            if (Y != other.Y) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (X != 0) hash ^= X.GetHashCode();
            if (Y != 0) hash ^= Y.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (X != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(X);
            }
            if (Y != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Y);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (X != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
            }
            if (Y != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Displacement other) {
            if (other == null) {
                return;
            }
            if (other.X != 0) {
                X = other.X;
            }
            if (other.Y != 0) {
                Y = other.Y;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        X = input.ReadUInt32();
                        break;
                    }
                    case 16: {
                        Y = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Elevation : pb::IMessage<Elevation>
    {
        private static readonly pb::MessageParser<Elevation> _parser = new pb::MessageParser<Elevation>(() => new Elevation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Elevation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Elevation() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Elevation(Elevation other) : this() {
            elevation_ = other.elevation_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Elevation Clone() {
            return new Elevation(this);
        }

        /// <summary>Field number for the "elevation" field.</summary>
        public const int Elevation_FieldNumber = 1;
        private uint elevation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Elevation_ {
            get { return elevation_; }
            set {
                elevation_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Elevation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Elevation other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Elevation_ != other.Elevation_) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Elevation_ != 0) hash ^= Elevation_.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Elevation_ != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Elevation_);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Elevation_ != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Elevation_);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Elevation other) {
            if (other == null) {
                return;
            }
            if (other.Elevation_ != 0) {
                Elevation_ = other.Elevation_;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Elevation_ = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class LensHelp : pb::IMessage<LensHelp>
    {
        private static readonly pb::MessageParser<LensHelp> _parser = new pb::MessageParser<LensHelp>(() => new LensHelp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LensHelp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LensHelp() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LensHelp(LensHelp other) : this() {
            id_ = other.id_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LensHelp Clone() {
            return new LensHelp(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private uint id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Id {
            get { return id_; }
            set {
                id_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as LensHelp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LensHelp other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Id != other.Id) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Id != 0) hash ^= Id.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Id != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Id);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Id != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LensHelp other) {
            if (other == null) {
                return;
            }
            if (other.Id != 0) {
                Id = other.Id;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Id = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class Clothes : pb::IMessage<Clothes>
    {
        private static readonly pb::MessageParser<Clothes> _parser = new pb::MessageParser<Clothes>(() => new Clothes());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Clothes> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clothes() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clothes(Clothes other) : this() {
            slot_ = other.slot_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clothes Clone() {
            return new Clothes(this);
        }

        /// <summary>Field number for the "slot" field.</summary>
        public const int SlotFieldNumber = 1;
        private uint slot_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Slot {
            get { return slot_; }
            set {
                slot_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as Clothes);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Clothes other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Slot != other.Slot) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Slot != 0) hash ^= Slot.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Slot != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Slot);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Slot != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slot);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Clothes other) {
            if (other == null) {
                return;
            }
            if (other.Slot != 0) {
                Slot = other.Slot;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Slot = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class MarketInfo : pb::IMessage<MarketInfo>
    {
        private static readonly pb::MessageParser<MarketInfo> _parser = new pb::MessageParser<MarketInfo>(() => new MarketInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MarketInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MarketInfo() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MarketInfo(MarketInfo other) : this() {
            category_ = other.category_;
            tradeAs_ = other.tradeAs_;
            showAs_ = other.showAs_;
            name_ = other.name_;
            restrictVocation_ = other.restrictVocation_;
            requiredLevel_ = other.requiredLevel_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MarketInfo Clone() {
            return new MarketInfo(this);
        }

        /// <summary>Field number for the "category" field.</summary>
        public const int CategoryFieldNumber = 1;
        private uint category_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Category {
            get { return category_; }
            set {
                category_ = value;
            }
        }

        /// <summary>Field number for the "tradeAs" field.</summary>
        public const int TradeAsFieldNumber = 2;
        private uint tradeAs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TradeAs {
            get { return tradeAs_; }
            set {
                tradeAs_ = value;
            }
        }

        /// <summary>Field number for the "showAs" field.</summary>
        public const int ShowAsFieldNumber = 3;
        private uint showAs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ShowAs {
            get { return showAs_; }
            set {
                showAs_ = value;
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 4;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
            get { return name_; }
            set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "restrictVocation" field.</summary>
        public const int RestrictVocationFieldNumber = 5;
        private uint restrictVocation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RestrictVocation {
            get { return restrictVocation_; }
            set {
                restrictVocation_ = value;
            }
        }

        /// <summary>Field number for the "requiredLevel" field.</summary>
        public const int RequiredLevelFieldNumber = 6;
        private uint requiredLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RequiredLevel {
            get { return requiredLevel_; }
            set {
                requiredLevel_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as MarketInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MarketInfo other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Category != other.Category) return false;
            if (TradeAs != other.TradeAs) return false;
            if (ShowAs != other.ShowAs) return false;
            if (Name != other.Name) return false;
            if (RestrictVocation != other.RestrictVocation) return false;
            if (RequiredLevel != other.RequiredLevel) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Category != 0) hash ^= Category.GetHashCode();
            if (TradeAs != 0) hash ^= TradeAs.GetHashCode();
            if (ShowAs != 0) hash ^= ShowAs.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (RestrictVocation != 0) hash ^= RestrictVocation.GetHashCode();
            if (RequiredLevel != 0) hash ^= RequiredLevel.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Category != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Category);
            }
            if (TradeAs != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(TradeAs);
            }
            if (ShowAs != 0) {
                output.WriteRawTag(24);
                output.WriteUInt32(ShowAs);
            }
            if (Name.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(Name);
            }
            if (RestrictVocation != 0) {
                output.WriteRawTag(40);
                output.WriteUInt32(RestrictVocation);
            }
            if (RequiredLevel != 0) {
                output.WriteRawTag(48);
                output.WriteUInt32(RequiredLevel);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Category != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Category);
            }
            if (TradeAs != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TradeAs);
            }
            if (ShowAs != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShowAs);
            }
            if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (RestrictVocation != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RestrictVocation);
            }
            if (RequiredLevel != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredLevel);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MarketInfo other) {
            if (other == null) {
                return;
            }
            if (other.Category != 0) {
                Category = other.Category;
            }
            if (other.TradeAs != 0) {
                TradeAs = other.TradeAs;
            }
            if (other.ShowAs != 0) {
                ShowAs = other.ShowAs;
            }
            if (other.Name.Length != 0) {
                Name = other.Name;
            }
            if (other.RestrictVocation != 0) {
                RestrictVocation = other.RestrictVocation;
            }
            if (other.RequiredLevel != 0) {
                RequiredLevel = other.RequiredLevel;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Category = input.ReadUInt32();
                        break;
                    }
                    case 16: {
                        TradeAs = input.ReadUInt32();
                        break;
                    }
                    case 24: {
                        ShowAs = input.ReadUInt32();
                        break;
                    }
                    case 34: {
                        Name = input.ReadString();
                        break;
                    }
                    case 40: {
                        RestrictVocation = input.ReadUInt32();
                        break;
                    }
                    case 48: {
                        RequiredLevel = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class DefaultAction : pb::IMessage<DefaultAction>
    {
        private static readonly pb::MessageParser<DefaultAction> _parser = new pb::MessageParser<DefaultAction>(() => new DefaultAction());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DefaultAction> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DefaultAction() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DefaultAction(DefaultAction other) : this() {
            action_ = other.action_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DefaultAction Clone() {
            return new DefaultAction(this);
        }

        /// <summary>Field number for the "action" field.</summary>
        public const int ActionFieldNumber = 1;
        private global::OpenTibiaUnity.Proto.Appearances.PlayerAction action_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.PlayerAction Action {
            get { return action_; }
            set {
                action_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as DefaultAction);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DefaultAction other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Action != other.Action) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Action != 0) hash ^= Action.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Action != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int)Action);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Action != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Action);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DefaultAction other) {
            if (other == null) {
                return;
            }
            if (other.Action != 0) {
                Action = other.Action;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        action_ = (global::OpenTibiaUnity.Proto.Appearances.PlayerAction)input.ReadEnum();
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class FrameGroup : pb::IMessage<FrameGroup>
    {
        private static readonly pb::MessageParser<FrameGroup> _parser = new pb::MessageParser<FrameGroup>(() => new FrameGroup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FrameGroup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroup() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroup(FrameGroup other) : this() {
            type_ = other.type_;
            width_ = other.width_;
            height_ = other.height_;
            exactSize_ = other.exactSize_;
            layers_ = other.layers_;
            patternWidth_ = other.patternWidth_;
            patternHeight_ = other.patternHeight_;
            patternDepth_ = other.patternDepth_;
            phases_ = other.phases_;
            frameAnimation_ = other.frameAnimation_ != null ? other.frameAnimation_.Clone() : null;
            sprites_ = other.sprites_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroup Clone() {
            return new FrameGroup(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::OpenTibiaUnity.Proto.Appearances.FrameGroupType type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.FrameGroupType Type {
            get { return type_; }
            set {
                type_ = value;
            }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 2;
        private uint width_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Width {
            get { return width_; }
            set {
                width_ = value;
            }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 3;
        private uint height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Height {
            get { return height_; }
            set {
                height_ = value;
            }
        }

        /// <summary>Field number for the "exactSize" field.</summary>
        public const int ExactSizeFieldNumber = 4;
        private uint exactSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ExactSize {
            get { return exactSize_; }
            set {
                exactSize_ = value;
            }
        }

        /// <summary>Field number for the "layers" field.</summary>
        public const int LayersFieldNumber = 5;
        private uint layers_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Layers {
            get { return layers_; }
            set {
                layers_ = value;
            }
        }

        /// <summary>Field number for the "patternWidth" field.</summary>
        public const int PatternWidthFieldNumber = 6;
        private uint patternWidth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PatternWidth {
            get { return patternWidth_; }
            set {
                patternWidth_ = value;
            }
        }

        /// <summary>Field number for the "patternHeight" field.</summary>
        public const int PatternHeightFieldNumber = 7;
        private uint patternHeight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PatternHeight {
            get { return patternHeight_; }
            set {
                patternHeight_ = value;
            }
        }

        /// <summary>Field number for the "patternDepth" field.</summary>
        public const int PatternDepthFieldNumber = 8;
        private uint patternDepth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PatternDepth {
            get { return patternDepth_; }
            set {
                patternDepth_ = value;
            }
        }

        /// <summary>Field number for the "phases" field.</summary>
        public const int PhasesFieldNumber = 9;
        private uint phases_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Phases {
            get { return phases_; }
            set {
                phases_ = value;
            }
        }

        /// <summary>Field number for the "frameAnimation" field.</summary>
        public const int FrameAnimationFieldNumber = 10;
        private global::OpenTibiaUnity.Proto.Appearances.FrameAnimation frameAnimation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::OpenTibiaUnity.Proto.Appearances.FrameAnimation FrameAnimation {
            get { return frameAnimation_; }
            set {
                frameAnimation_ = value;
            }
        }

        /// <summary>Field number for the "sprites" field.</summary>
        public const int SpritesFieldNumber = 11;
        private static readonly pb::FieldCodec<uint> _repeated_sprites_codec
            = pb::FieldCodec.ForUInt32(90);
        private readonly pbc::RepeatedField<uint> sprites_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Sprites {
            get { return sprites_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as FrameGroup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FrameGroup other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Type != other.Type) return false;
            if (Width != other.Width) return false;
            if (Height != other.Height) return false;
            if (ExactSize != other.ExactSize) return false;
            if (Layers != other.Layers) return false;
            if (PatternWidth != other.PatternWidth) return false;
            if (PatternHeight != other.PatternHeight) return false;
            if (PatternDepth != other.PatternDepth) return false;
            if (Phases != other.Phases) return false;
            if (!object.Equals(FrameAnimation, other.FrameAnimation)) return false;
            if (!sprites_.Equals(other.sprites_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            if (Width != 0) hash ^= Width.GetHashCode();
            if (Height != 0) hash ^= Height.GetHashCode();
            if (ExactSize != 0) hash ^= ExactSize.GetHashCode();
            if (Layers != 0) hash ^= Layers.GetHashCode();
            if (PatternWidth != 0) hash ^= PatternWidth.GetHashCode();
            if (PatternHeight != 0) hash ^= PatternHeight.GetHashCode();
            if (PatternDepth != 0) hash ^= PatternDepth.GetHashCode();
            if (Phases != 0) hash ^= Phases.GetHashCode();
            if (frameAnimation_ != null) hash ^= FrameAnimation.GetHashCode();
            hash ^= sprites_.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Type != 0) {
                output.WriteRawTag(8);
                output.WriteEnum((int)Type);
            }
            if (Width != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Width);
            }
            if (Height != 0) {
                output.WriteRawTag(24);
                output.WriteUInt32(Height);
            }
            if (ExactSize != 0) {
                output.WriteRawTag(32);
                output.WriteUInt32(ExactSize);
            }
            if (Layers != 0) {
                output.WriteRawTag(40);
                output.WriteUInt32(Layers);
            }
            if (PatternWidth != 0) {
                output.WriteRawTag(48);
                output.WriteUInt32(PatternWidth);
            }
            if (PatternHeight != 0) {
                output.WriteRawTag(56);
                output.WriteUInt32(PatternHeight);
            }
            if (PatternDepth != 0) {
                output.WriteRawTag(64);
                output.WriteUInt32(PatternDepth);
            }
            if (Phases != 0) {
                output.WriteRawTag(72);
                output.WriteUInt32(Phases);
            }
            if (frameAnimation_ != null) {
                output.WriteRawTag(82);
                output.WriteMessage(FrameAnimation);
            }
            sprites_.WriteTo(output, _repeated_sprites_codec);
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Type != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (Width != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
            }
            if (Height != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
            }
            if (ExactSize != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExactSize);
            }
            if (Layers != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Layers);
            }
            if (PatternWidth != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatternWidth);
            }
            if (PatternHeight != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatternHeight);
            }
            if (PatternDepth != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatternDepth);
            }
            if (Phases != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Phases);
            }
            if (frameAnimation_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FrameAnimation);
            }
            size += sprites_.CalculateSize(_repeated_sprites_codec);
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FrameGroup other) {
            if (other == null) {
                return;
            }
            if (other.Type != 0) {
                Type = other.Type;
            }
            if (other.Width != 0) {
                Width = other.Width;
            }
            if (other.Height != 0) {
                Height = other.Height;
            }
            if (other.ExactSize != 0) {
                ExactSize = other.ExactSize;
            }
            if (other.Layers != 0) {
                Layers = other.Layers;
            }
            if (other.PatternWidth != 0) {
                PatternWidth = other.PatternWidth;
            }
            if (other.PatternHeight != 0) {
                PatternHeight = other.PatternHeight;
            }
            if (other.PatternDepth != 0) {
                PatternDepth = other.PatternDepth;
            }
            if (other.Phases != 0) {
                Phases = other.Phases;
            }
            if (other.frameAnimation_ != null) {
                if (frameAnimation_ == null) {
                    frameAnimation_ = new global::OpenTibiaUnity.Proto.Appearances.FrameAnimation();
                }
                FrameAnimation.MergeFrom(other.FrameAnimation);
            }
            sprites_.Add(other.sprites_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        type_ = (global::OpenTibiaUnity.Proto.Appearances.FrameGroupType)input.ReadEnum();
                        break;
                    }
                    case 16: {
                        Width = input.ReadUInt32();
                        break;
                    }
                    case 24: {
                        Height = input.ReadUInt32();
                        break;
                    }
                    case 32: {
                        ExactSize = input.ReadUInt32();
                        break;
                    }
                    case 40: {
                        Layers = input.ReadUInt32();
                        break;
                    }
                    case 48: {
                        PatternWidth = input.ReadUInt32();
                        break;
                    }
                    case 56: {
                        PatternHeight = input.ReadUInt32();
                        break;
                    }
                    case 64: {
                        PatternDepth = input.ReadUInt32();
                        break;
                    }
                    case 72: {
                        Phases = input.ReadUInt32();
                        break;
                    }
                    case 82: {
                        if (frameAnimation_ == null) {
                            frameAnimation_ = new global::OpenTibiaUnity.Proto.Appearances.FrameAnimation();
                        }
                        input.ReadMessage(frameAnimation_);
                        break;
                    }
                    case 90:
                    case 88: {
                        sprites_.AddEntriesFrom(input, _repeated_sprites_codec);
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class FrameAnimation : pb::IMessage<FrameAnimation>
    {
        private static readonly pb::MessageParser<FrameAnimation> _parser = new pb::MessageParser<FrameAnimation>(() => new FrameAnimation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FrameAnimation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameAnimation() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameAnimation(FrameAnimation other) : this() {
            async_ = other.async_;
            loopCount_ = other.loopCount_;
            startPhase_ = other.startPhase_;
            frameGroupDurations_ = other.frameGroupDurations_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameAnimation Clone() {
            return new FrameAnimation(this);
        }

        /// <summary>Field number for the "async" field.</summary>
        public const int AsyncFieldNumber = 1;
        private bool async_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Async {
            get { return async_; }
            set {
                async_ = value;
            }
        }

        /// <summary>Field number for the "loopCount" field.</summary>
        public const int LoopCountFieldNumber = 2;
        private int loopCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LoopCount {
            get { return loopCount_; }
            set {
                loopCount_ = value;
            }
        }

        /// <summary>Field number for the "startPhase" field.</summary>
        public const int StartPhaseFieldNumber = 3;
        private int startPhase_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StartPhase {
            get { return startPhase_; }
            set {
                startPhase_ = value;
            }
        }

        /// <summary>Field number for the "frameGroupDurations" field.</summary>
        public const int FrameGroupDurationsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration> _repeated_frameGroupDurations_codec
            = pb::FieldCodec.ForMessage(34, global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration.Parser);
        private readonly pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration> frameGroupDurations_ = new pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::OpenTibiaUnity.Proto.Appearances.FrameGroupDuration> FrameGroupDurations {
            get { return frameGroupDurations_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as FrameAnimation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FrameAnimation other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Async != other.Async) return false;
            if (LoopCount != other.LoopCount) return false;
            if (StartPhase != other.StartPhase) return false;
            if (!frameGroupDurations_.Equals(other.frameGroupDurations_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Async != false) hash ^= Async.GetHashCode();
            if (LoopCount != 0) hash ^= LoopCount.GetHashCode();
            if (StartPhase != 0) hash ^= StartPhase.GetHashCode();
            hash ^= frameGroupDurations_.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Async != false) {
                output.WriteRawTag(8);
                output.WriteBool(Async);
            }
            if (LoopCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(LoopCount);
            }
            if (StartPhase != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(StartPhase);
            }
            frameGroupDurations_.WriteTo(output, _repeated_frameGroupDurations_codec);
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Async != false) {
                size += 1 + 1;
            }
            if (LoopCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoopCount);
            }
            if (StartPhase != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartPhase);
            }
            size += frameGroupDurations_.CalculateSize(_repeated_frameGroupDurations_codec);
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FrameAnimation other) {
            if (other == null) {
                return;
            }
            if (other.Async != false) {
                Async = other.Async;
            }
            if (other.LoopCount != 0) {
                LoopCount = other.LoopCount;
            }
            if (other.StartPhase != 0) {
                StartPhase = other.StartPhase;
            }
            frameGroupDurations_.Add(other.frameGroupDurations_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Async = input.ReadBool();
                        break;
                    }
                    case 16: {
                        LoopCount = input.ReadInt32();
                        break;
                    }
                    case 24: {
                        StartPhase = input.ReadInt32();
                        break;
                    }
                    case 34: {
                        frameGroupDurations_.AddEntriesFrom(input, _repeated_frameGroupDurations_codec);
                        break;
                    }
                }
            }
        }

    }

    public sealed partial class FrameGroupDuration : pb::IMessage<FrameGroupDuration>
    {
        private static readonly pb::MessageParser<FrameGroupDuration> _parser = new pb::MessageParser<FrameGroupDuration>(() => new FrameGroupDuration());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FrameGroupDuration> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
            get { return global::OpenTibiaUnity.Proto.Appearances.AppearancesReflection.Descriptor.MessageTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroupDuration() {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroupDuration(FrameGroupDuration other) : this() {
            min_ = other.min_;
            max_ = other.max_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrameGroupDuration Clone() {
            return new FrameGroupDuration(this);
        }

        /// <summary>Field number for the "min" field.</summary>
        public const int MinFieldNumber = 1;
        private uint min_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Min {
            get { return min_; }
            set {
                min_ = value;
            }
        }

        /// <summary>Field number for the "max" field.</summary>
        public const int MaxFieldNumber = 2;
        private uint max_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Max {
            get { return max_; }
            set {
                max_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
            return Equals(other as FrameGroupDuration);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FrameGroupDuration other) {
            if (ReferenceEquals(other, null)) {
                return false;
            }
            if (ReferenceEquals(other, this)) {
                return true;
            }
            if (Min != other.Min) return false;
            if (Max != other.Max) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
            int hash = 1;
            if (Min != 0) hash ^= Min.GetHashCode();
            if (Max != 0) hash ^= Max.GetHashCode();
            if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
            if (Min != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Min);
            }
            if (Max != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Max);
            }
            if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
            int size = 0;
            if (Min != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Min);
            }
            if (Max != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Max);
            }
            if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FrameGroupDuration other) {
            if (other == null) {
                return;
            }
            if (other.Min != 0) {
                Min = other.Min;
            }
            if (other.Max != 0) {
                Max = other.Max;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
                switch (tag) {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8: {
                        Min = input.ReadUInt32();
                        break;
                    }
                    case 16: {
                        Max = input.ReadUInt32();
                        break;
                    }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
